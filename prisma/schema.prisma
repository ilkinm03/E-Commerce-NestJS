// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  guid          String         @unique @db.VarChar(36)
  first_name    String
  last_name     String
  email         String         @unique
  password      String
  provider      String?        @default("local")
  provided_id   String?        @unique
  refresh_token String?        @unique
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  roles         RolesOnUsers[]
  orders        Order[]

  @@index([guid])
}

model RolesOnUsers {
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  role       Role     @relation(fields: [role_id], references: [id])
  role_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([user_id, role_id])
}

model Role {
  id           Int                  @id @default(autoincrement())
  guid         String               @unique @db.VarChar(36)
  title        String               @unique
  permisisons  PermissionsOnRoles[]
  created_at   DateTime             @default(now())
  updated_at   DateTime             @updatedAt
  RolesOnUsers RolesOnUsers[]

  @@index([guid])
}

model Permission {
  id         Int                  @id @default(autoincrement())
  guid       String               @unique @db.VarChar(36)
  title      String               @unique
  roles      PermissionsOnRoles[]
  created_at DateTime             @default(now())
  updated_at DateTime             @updatedAt

  @@index([guid])
}

model PermissionsOnRoles {
  role          Role       @relation(fields: [role_id], references: [id])
  role_id       Int
  permission    Permission @relation(fields: [permission_id], references: [id])
  permission_id Int
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt

  @@id([permission_id, role_id])
}

model Product {
  id          Int               @id @default(autoincrement())
  guid        String            @unique @db.VarChar(36)
  title       String            @db.VarChar(64)
  description String            @db.VarChar(128)
  price       Float             @db.Real
  created_at  DateTime          @default(now())
  updated_at  DateTime          @updatedAt
  orders      ProductsOnOrder[]

  @@index([guid])
}

model ProductsOnOrder {
  product    Product  @relation(fields: [product_id], references: [id])
  product_id Int
  order      Order    @relation(fields: [order_id], references: [id])
  order_id   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([product_id, order_id])
}

model Order {
  id              Int               @id @default(autoincrement())
  guid            String            @unique @db.VarChar(36)
  order_no        String            @unique
  total_price     Float             @default(0) @db.Real
  user            User              @relation(fields: [userId], references: [id])
  userId          Int
  payment_method  String?
  payment_status  String            @default("pending")
  transaction_id  Int?              @unique
  shipping_method String?
  tracking_number String?           @unique
  order_status    String?           @default("pending")
  order_date      DateTime          @default(now()) @db.Timestamp()
  delivery_date   DateTime?
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  products        ProductsOnOrder[]

  @@index([guid])
}
